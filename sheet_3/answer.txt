Answers from our SE-tutor:


Here are your answers regarding your questions: 


Question 1:
    With 'The game' is there ment to be collected information about the game (and or it's mechanics)
    or about the application? Is the to-be-collected information supposed to reflect in-game status
    or general information like CPU-usage, RAM-usage, execution time or bandwidth?
Answer 1: 
    The collected statistics should be game-related. That is, the game should collect statistics about its behavior and mechanics. But we like your idea of displaying the ping and currently used bandwidth. Besides the in-game statistics, this should also be displayed.
    
Question 2: 

  Is 'The game' supposed to save the collected information or is it okay to begin anew each start?

Answer 2:

That depends on the kind of statistics.

Question 3:

  Does 'displaying' mean that the statistics is somehow available for the player    or might it only be supposed for developers through a (debug) console or the like?    Display in what form, e.g. 'raw' data in a table or does it have to be a nice-looking graphic?

Answer 3: 

The statistics should always be available for the player to view. Otherwise, collecting statistics doesn't make much sense. We are not interested in the development process. If the developers need to display some internal data for themselves, they very well may do that, but don't bother the player with that internal gibberish.

Question 4:

  Should the statistics differ in the their topic, eg. should they be closely related    or cover broader area? How many of them should relate to the players individual    activity, and how many different statistics are we (the developers) allowed to collect?

Answer 4:

You (the developers) must collect at least 5 different statistics.

The statistics should be sensible and not too arbitrary. That is, the player should be able to retrieve information useful to him to evaluate his gameplay. Therefore, the "topic" or "broader area" depends on the type of game and the possibly collectible statistics.

Question 5:

  The statistics could be saved as a chronological list of events    which allows us to have a clear understanding of when and what    things happend and provide easier support if the player experiences.    Or we could save them in a tablerized way which would have allow    us to compare the different metrics.    For player related statistics we recommend the second option.    Which is the intended interpretation?

Answer 5:

Yes, the first part is a good idea. What is being collected is dependent on the kind of statistics. This could, e.g. be a replay function where the player can review the entire game and evaluate his gameplay.

The second one could also make sense if the collected statistics allow for displaying them in a tabular fashion. This could be overall time spent, built units, used resources, etc. Depending on what the game provides to collect.

We like both ideas. Realize them both if it helps the player to understand the implications of the data for his game better. 
